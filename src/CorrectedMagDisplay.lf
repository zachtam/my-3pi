/**
 * Display three dimensions of accelerometer measurements on the LCD display of the
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 * To run this program, first put the robot in BOOTSEL mode (hold button B while
 * resetting). Then the sequence of commands is something like this:
 *
 * ```
 *     $ cd ~/lf-pico
 *     $ lfc src/AccelerometerDisplay.lf
 *     ...
 *     $ picotool load -x bin/AccelerometerDisplay.elf
 * ```
 *
 * This compiles the program, loads it into flash memory on the robot, and begins
 * executing it.
 *
 * @author Edward A. Lee
 */
 target C {
    platform: "RP2040",
    threading: false,
}

import CorrectedMag from "lib/IMU.lf"
import Display from "lib/Display.lf"

preamble {=
  #define RAD2DEG 57.2957795131f
=}

main reactor {
    m = new CorrectedMag()
    d = new Display()
    timer t(0, 250 msec)
    reaction(t) -> m.trigger {=
        lf_set(m.trigger, true);
    =}

    reaction(m.x, m.y, m.z) -> d.line0, d.line1, d.line2, d.line3 {=
        /// TODO: define max string size for line
        /// based on font you can have 4 or 8 lines 
        static char buf0[17];
        static char buf1[17];
        static char buf2[17];
        static char buf3[17];

        float heading = atan2(-m.y->value, m.x->value)*RAD2DEG;

        snprintf(buf0, 17, "x:%2.4f", m.x->value);
        snprintf(buf1, 17, "y:%2.4f", m.y->value);
        snprintf(buf2, 17, "z:%2.4f", m.z->value);
        snprintf(buf3, 17, "a:%2.4f", heading);
        
        lf_set(d.line0, buf0);
        lf_set(d.line1, buf1);
        lf_set(d.line2, buf2);
        lf_set(d.line3, buf3);
    =}
}